import { useEffect, useState, useMemo } from "react";
import { useDispatch, useSelector, shallowEqual } from "react-redux";
import { getWaterMonth } from "../../redux/month/operations";
import {
  selectMonthWater,
  selectIsLoadingMonth,
  selectError,
} from "../../redux/month/selectors";
import Calendar from "../Calendar/Calendar";
import CalendarPagination from "../CalendarPagination/CalendarPagination";

const MonthInfo = () => {
// import css from "./MonthInfo.module.css";
  const [currentDate, setCurrentDate] = useState(new Date());
  const dispatch = useDispatch();
  const loading = useSelector(selectIsLoadingMonth);
  const error = useSelector(selectError);

  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ shallowEqual, —â–æ–± –∑–∞–ø–æ–±—ñ–≥—Ç–∏ –∑–∞–π–≤–∏–º —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∞–º
  const monthWater = useSelector(selectMonthWater, shallowEqual);

  const totalWater = 1500; // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –Ω–æ—Ä–º—É –≤–æ–¥–∏ (–º–æ–∂–Ω–∞ –∑ Redux)

  // ‚úÖ –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤—ñ–¥—Å–æ—Ç–∫–∏ –¢–Ü–õ–¨–ö–ò –∫–æ–ª–∏ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è monthWater
  // const percentArray = useMemo(() => {
  //   console.log("üìä –ü–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î–º–æ percentArray...");
  //   return calculateWaterPercentage(monthWater, totalWater);
  // }, [monthWater, totalWater]);

  // üõë –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, –∫–æ–ª–∏ monthWater —Ä–µ–∞–ª—å–Ω–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è
  useEffect(() => {
    console.log("üì¶ –î–∞–Ω—ñ Redux –∑–º—ñ–Ω–∏–ª–∏—Å—è:", monthWater);
  }, [monthWater]);

  // ‚úÖ –§—ñ–∫—Å—É—î–º–æ, —â–æ–± setCurrentDate() –Ω–µ –≤–∏–∫–ª–∏–∫–∞–≤ –∑–∞–π–≤—ñ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏
  const handleMonthChange = (newDate) => {
    setCurrentDate((prevDate) => {
      const prevYearMonth = `${prevDate.getFullYear()}-${String(
        prevDate.getMonth() + 1
      ).padStart(2, "0")}`;
      const newYearMonth = `${newDate.getFullYear()}-${String(
        newDate.getMonth() + 1
      ).padStart(2, "0")}`;

      // üî• –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–º—ñ–Ω–∏–ª–∞—Å—å –¥–∞—Ç–∞, —â–æ–± –Ω–µ —Ä–æ–±–∏—Ç–∏ –∑–∞–π–≤–∏–π –∑–∞–ø–∏—Ç
      if (prevYearMonth !== newYearMonth) {
        console.log("üìÖ –û–Ω–æ–≤–ª—é—î–º–æ currentDate:", newYearMonth);
        return newDate;
      }
      return prevDate;
    });
  };

  // ‚úÖ –ó–∞–ø–∏—Ç –ª–∏—à–µ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –º—ñ—Å—è—Ü—è (–±–µ–∑ –∑–∞–π–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤)
  useEffect(() => {
    const yearMonth = `${currentDate.getFullYear()}-${String(
      currentDate.getMonth() + 1
    ).padStart(2, "0")}`;

    console.log("üìÖ –í–∏–∫–ª–∏–∫–∞—î–º–æ getWaterMonth:", yearMonth);
    dispatch(getWaterMonth(yearMonth));
  }, [dispatch, currentDate]);
  // waterData = { percentArray };

  return (
    <div>
      <CalendarPagination
        currentDate={currentDate}
        onChangeMonth={handleMonthChange} // ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞—Ö–∏—â–µ–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
      />
      {loading && <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}
      {error && <p style={{ color: "red" }}>{error}</p>}
      <Calendar currentDate={currentDate} />
    </div>
  );
};

export default MonthInfo;
